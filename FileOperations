import android.content.Context;
import android.util.Log;
import android.widget.Toast;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;



/*
* This class has all the file operation methods : read,write,delete contacts
* */
public class FileOperation {

    private static final File FILE = new File("Contacts3.txt");//the contacts file
    //read the file and put it in a list of type contacts. This list contains all the contacts from the file in a sorted manner
    public static List<Contact> fileRead(Context context){
        //contact = new ArrayList<>();
        List<String> lines = readLines(context);
        List<Contact> contacts = new ArrayList<Contact>();
        for (String line:lines){
            if(!(line.equals(""))){
                Contact contact = StringtoObject(line); // convert the string to object
                contacts.add(contact); // add the contact to the list
            }
        }
        //sort the list of contacts
        sortContacts(contacts);
        return contacts;
    }
    //This method reads the file and returns the contacts read from the file in a list of String objects
    public static List<String> readLines(Context context) {
        List<String> lines = new ArrayList<String>();
        String line;
        try {
            InputStream inputStream = context.openFileInput("Contacts3.txt");
            if (inputStream != null) {
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                while ((line = bufferedReader.readLine()) != null) {
                    lines.add(line);
                }
                inputStream.close();
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return lines;
    }

    //This methods takes the contacts list as input and returns a sorted list
    public static void sortContacts(List<Contact> contacts){
        Collections.sort(contacts, new Comparator<Contact>() {
            @Override
            public int compare(Contact lhs, Contact rhs) {
                return lhs.getFirstname().compareToIgnoreCase(rhs.getFirstname());
            }
        });
    }

    //This method converts the String object of contact in to an object of class Contact
    public static Contact StringtoObject(String contact){
        String[] record = contact.split("\t"); // split the record on tab and put the tab separted values in the contact object
        Contact current = new Contact();
        current.setFirstname(record[0]);
        current.setLastname(record[1]);
        current.setPhone(record[2]);
        current.setEmail(record[3]);
        return current;
    }
    //This method deleted a particular record from the file.
    public static void deleteRecord(File file, String varFirstName, String varLastName, String varPhoneNo, String varEmail,Context context){

        int flagDelete =0; //initialise the delete flag to 0
        List<String> newlines = new ArrayList<String>(); //a new list created to store the updated list (without the deleted contact)
        List<String> lines = readLines(context); //read the contacts from file in a string list
        for(String contact : lines){
            if(!(contact.equals(""))){
                Contact c = StringtoObject(contact);// convert the srting object to object of class Contact
                if(c.getFirstname().equalsIgnoreCase(varFirstName) && c.getLastname().equalsIgnoreCase(varLastName) && c.getPhone().equalsIgnoreCase(varPhoneNo)) {
                   //if the selected record matches a record in the file remove the record from the list
                    lines.remove(c);
                    flagDelete = 1; //set the flag to 1
                }
                else{
                    //if the record in the list doesnt match the record which has been seleted for deletion then add the record to a new list
                    newlines.add(contact);

                }
            }

        }
        if(flagDelete==1){
            //when the flagDelete is 1, rewrite the file with the updated list (newlines)
            FileOutputStream fos;
            try {
                fos = context.openFileOutput("Contacts3.txt",Context.MODE_PRIVATE);
                OutputStreamWriter osw = new OutputStreamWriter(fos);
                for(String record : newlines){
                    osw.write(record);
                    osw.write("\n");
                }
                osw.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }



    }
    //This method writes a line(contact) to the file
    public static void WriteLineToFile(String firstname, String lastname, String phoneNo, String emailId, Context context) {

        try {

            FileOutputStream fileOutputStream;
            //Check if the file exists
            if (!FILE.exists()) {

                fileOutputStream = context.openFileOutput("Contacts3.txt",Context.MODE_APPEND);

            }
            else {
                fileOutputStream = context.openFileOutput("Contacts3.txt", Context.MODE_APPEND);
            }
            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(fileOutputStream);
            //write the record to the file separating the fields by tabs.
            outputStreamWriter.append(firstname + "\t" + lastname + "\t" + phoneNo + "\t" + emailId+"\n");
            outputStreamWriter.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    //This method writes a string to the file
    public static boolean WriteLineToFile(String line,Context context) {

        try {

            FileOutputStream fos;
            fos = context.openFileOutput("Contacts3.txt",Context.MODE_APPEND);
            OutputStreamWriter osw = new OutputStreamWriter(fos);
            //Write the given string coming in as a parameter in the file
            osw.write(line);
            osw.write("\n");
            osw.close();

            } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }



}
